openapi: 3.0.3
info:
  title: Fingerprint Pro Server API
  description: Fingerprint Pro Server API allows you to get information about visitors and about individual events in a server environment. This API can be used for data exports, decision-making, and data analysis scenarios.
  version: '3'
  contact:
    name: Fingerprint Support
    email: support@fingerprint.com
tags:
  - name: Fingerprint
    externalDocs:
      description: API documentation
      url: https://dev.fingerprint.com/docs/server-api
servers:
  - url: https://api.fpjs.io
    description: Global
  - url: https://eu.api.fpjs.io
    description: EU
  - url: https://ap.api.fpjs.io
    description: Asia (Mumbai)
security:
  - ApiKeyHeader: [ ]
  - ApiKeyQuery: [ ]
paths:
  /events/{request_id}:
    get:
      tags:
        - Fingerprint
      summary: Get event by requestId
      description: This endpoint allows you to get events with all the information from each activated product (Fingerprint Pro or Bot Detection). Use the requestId as a URL path :request_id parameter. This API method is scoped to a request, i.e. all returned information is by requestId.
      operationId: 'getEvent'
      parameters:
        - name: request_id
          in: path
          description: requestId is the unique identifier of each request
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
              examples:
                fullResponse:
                  summary: Example response
                  externalValue: '/examples/get_event.json'
                allErrorsResponse:
                  summary: Example response with all failed signals
                  externalValue: '/examples/get_event_all_errors.json'
                withBotdError:
                  summary: Example error response with BotD error
                  externalValue: '/examples/get_event_botd_failed_error.json'
                withBotdTooManyRequestsError:
                  summary: Example error response with BotD error when too many requests are sent
                  externalValue: '/examples/get_event_botd_too_many_requests_error.json'
                withIdentificationError:
                  summary: Example error response with identification error
                  externalValue: '/examples/get_event_identification_failed_error.json'
                withIdentificationTooManyRequestsError:
                  summary: Example error response with identification error when too many requests are sent
                  externalValue: '/examples/get_event_identification_too_many_requests_error.json'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEvent403Response'
              examples:
                example:
                  summary: Example response
                  externalValue: '/examples/get_event_403_error.json'
        '404':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorEvent404Response'
              examples:
                example:
                  summary: Example response
                  externalValue: '/examples/get_event_404_error.json'
  /visitors/{visitor_id}:
    get:
      tags:
        - Fingerprint
      operationId: 'getVisits'
      summary: Get visits by visitorId
      description: This endpoint allows you to get a history of visits with all available information. Use the visitorId as a URL path parameter. This API method is scoped to a visitor, i.e. all returned information is by visitorId.
      parameters:
        - name: visitor_id
          in: path
          required: true
          schema:
            type: string
          example: uYIm7Ksp5rf00SllPhFp
        - name: request_id
          description: Filter visits by requestId
          in: query
          schema:
            type: string
        #          example: 1654815516083.OX6kx8
        - name: linked_id
          description: Filter visits by custom identifier
          in: query
          schema:
            type: string
          required: false
        #          example: some_id
        - name: limit
          description: Limit scanned results
          in: query
          schema:
            type: integer
            format: int32
            minimum: 0
        #            default: 0
        #          example: 10
        - name: before
          description: Timestamp (in milliseconds since epoch) used to paginate results
          in: query
          schema:
            type: integer
            format: int64
            minimum: 0
            # default: 0
            # example: 1654815517198
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
              examples:
                limit1:
                  summary: Request with limit=1
                  externalValue: '/examples/visits_limit_1.json'
                limit500:
                  summary: Request with limit=500
                  externalValue: '/examples/visits_limit_500.json'
        '403':
          description: "Forbidden. Probably ApiKey is missed or provided the wrong one."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorVisits403'
              examples:
                example:
                  summary: Forbidden
                  externalValue: '/examples/visits_403_error.json'
        '429':
          description: Too Many Requests
          headers:
            Retry-After:
              description: Indicates how long the user should wait before attempting the next request.
              schema:
                type: integer
                format: int32
                minimum: 0
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManyRequestsResponse'
              examples:
                example:
                  summary: Example too many requests error response
                  externalValue: '/examples/visits_too_many_requests_error.json'
  /webhook:
    trace:
      tags:
        - Fingerprint
      description: Fake path to describe webhook format. More information about webhooks can be found in the [documentation](https://dev.fingerprint.com/docs/webhooks)
      responses:
        default:
          description: Dummy for the schema
      callbacks:
        webhook:
          webhook:
            post:
              description: You can use HTTP basic authentication and set up credentials in your [Fingerprint account](https://dashboard.fingerprint.com/login)
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/WebhookVisit'
                    example:
                      externalValue: '/examples/webhook.json'
              responses:
                default:
                  description: The server doesn't validate the answer.
components:
  securitySchemes:
    ApiKeyHeader:
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: Auth-API-Key  # name of the header, query parameter or cookie
    ApiKeyQuery:
      type: apiKey
      in: query       # can be "header", "query" or "cookie"
      name: api_key  # name of the header, query parameter or cookie
  schemas:
    Response:
      type: object
      additionalProperties: false
      properties:
        visitorId:
          type: string
        visits:
          type: array
          items:
            title: ResponseVisits
            allOf:
              - $ref: '#/components/schemas/Visit'
              - required:
                - tag
        lastTimestamp:
          description: When more results are available (e.g., you scanned 200 results using `limit` parameter, but a total of 600 results are available), a special `lastTimestamp` top-level attribute is added to the response. If you want to paginate the results further in the past, you should use the value of this attribute.
          type: integer
          format: int64
          example: 1654815517198
        paginationKey:
          description: Visit's `requestId` of the last visit in the current page.
          type: string
          example: '1654815517198.azN4IZ'
      required:
        - visitorId
        - visits
      title: PaginatedResponse
      description: Fields `lastTimestamp` and `paginationKey` added when `limit` or `before` parameter provided and there is more data to show
    ErrorEvent403Response:
      type: object
      additionalProperties: false
      properties:
        error:
          type: 'object'
          additionalProperties: false
          title: ErrorEvent403ResponseError
          properties:
            code:
              type: string
              description: >
                Error code:
                 * `TokenRequired` - `Auth-API-Key` header is missing or empty
                 * `TokenNotFound` - subscription not found for specified secret key
                 * `SubscriptionNotActive` - subscription is not active
                 * `WrongRegion` - server and subscription region differ
              enum:
                - TokenRequired
                - TokenNotFound
                - SubscriptionNotActive
                - WrongRegion
              example: 'TokenRequired'
            message:
              type: string
              example: 'secret key is required'
          required:
            - code
            - message
    ErrorEvent404Response:
      type: object
      additionalProperties: false
      properties:
        error:
          type: 'object'
          additionalProperties: false
          title: ErrorEvent404ResponseError
          properties:
            code:
              type: string
              description: >
                Error code:
                 * `RequestNotFound` - request not found for specified id
              enum:
                - RequestNotFound
              example: 'RequestNotFound'
            message:
              type: string
              example: 'request id is not found'
          required:
            - code
            - message
    ErrorVisits403:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: 'Forbidden (HTTP 403)'
      required:
        - error
    ManyRequestsResponse:
      type: object
      additionalProperties: false
      properties:
        error:
          type: string
          description: Error text.
          example: 'request throttled'
      required:
        - error
    WebhookVisit:
      allOf:
        - type: object
          properties:
            visitorId:
              type: string
              example: '3HNey93AkBW6CRbxV6xP'
            clientReferrer:
              type: string
              example: 'https://google.com?search=banking+services'
            userAgent:
              type: string
              example: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36'
            bot:
              $ref: '#/components/schemas/BotdDetectionResult'
            ipInfo:
              $ref: '#/components/schemas/IpInfoResult'
            incognito:
              title: SignalResponseIncognito
              type: object
              properties:
                result:
                  type: boolean
                  description: >
                    `true` if we detected incognito mode used in the browser, `false` otherwise.
                  example: false
            rootApps:
              title: SignalResponseRootApps
              type: object
              properties:
                result:
                  type: boolean
                  description: >
                    Android specific root management apps detection. There are 2 values:
                    • `true` - Root Management Apps detected (e.g. Magisk)
                    • `false` - No Root Management Apps detected

                    Available only for events from Android client. The field will not be present for a browser or iOS event.
                  example: false
            emulator:
              title: SignalResponseEmulator
              type: object
              properties:
                result:
                  type: boolean
                  description: >
                    Android specific emulator detection. There are 2 values:
                    • `true` - Emulated environment detected (e.g. launch inside of AVD)
                    • `false` - No signs of emulated environment detected

                    Available only for events from Android client. The field will not be present for a browser or iOS event.
                  example: false
            ipBlocklist:
              $ref: '#/components/schemas/IpBlockListResult'
            tor:
              title: SignalResponseTor
              type: object
              properties:
                result:
                  type: boolean
                  description: >
                    `true` if the request IP address is a known tor exit node, `false` otherwise.
                  example: false
            vpn:
              $ref: '#/components/schemas/VpnResult'
            proxy:
              title: SignalResponseProxy
              type: object
              properties:
                result:
                  type: boolean
                  description: >
                    `true` if the request IP address is used by a public proxy provider, `false` otherwise.
                  example: false
            tampering:
              $ref: '#/components/schemas/TamperingResult'
          required:
            - visitorId
        - $ref: '#/components/schemas/Visit'
    Visit:
      type: object
      # The true default value for additionalProperties allows extending schema.
      # However, explicit additionalProperties: true breaks swagger-codegen, therefore commented out.
      # additionalProperties: true
      properties:
        requestId:
          description: Unique identifier of the user's identification request.
          type: string
          example: '1654815516083.OX6kx8'
        browserDetails:
          $ref: '#/components/schemas/BrowserDetails'
        incognito:
          description: Flag if user used incognito session.
          type: boolean
        ip:
          type: string
          format: ipv4
          example: '8.8.8.8'
        ipLocation:
          $ref: '#/components/schemas/IPLocation'
        timestamp:
          description: Timestamp of the event with millisecond precision in Unix time.
          type: integer
          format: int64
          example: 1654815516086
        time:
          title: Time
          description: Time expressed according to ISO 8601 in UTC format.
          type: string
          format: date-time
          example: '2022-06-09T22:58:36Z'
        url:
          description: Page URL from which identification request was sent.
          type: string
          format: uri
          example: 'https://some.website/path?query=params'
        tag:
          description: A customer-provided value or an object that was sent with identification request.
          type: object
          additionalProperties: true
        linkedId:
          description: A customer-provided id that was sent with identification request.
          type: string
          example: 'someID'
        confidence:
          $ref: '#/components/schemas/Confidence'
        visitorFound:
          description: Attribute represents if a visitor had been identified before.
          type: boolean
        firstSeenAt:
          $ref: '#/components/schemas/SeenAt'
        lastSeenAt:
          $ref: '#/components/schemas/SeenAt'
      required:
        - browserDetails
        - confidence
        - firstSeenAt
        - incognito
        - ip
        - ipLocation
        - lastSeenAt
        - requestId
        - time
        - timestamp
        - url
        - visitorFound
      title: Visit
    BrowserDetails:
      type: object
      additionalProperties: false
      properties:
        browserName:
          type: string
          example: 'Chrome'
        browserMajorVersion:
          type: string
          example: '101'
        browserFullVersion:
          type: string
          example: '101.0.4951'
        os:
          type: string
          example: 'Windows'
        osVersion:
          type: string
          example: '10'
        device:
          type: string
          example: 'Other'
        userAgent:
          type: string
          example: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.41 Safari/537.36'
        botProbability:
          type: integer
      required:
        - browserFullVersion
        - browserMajorVersion
        - browserName
        - device
        - os
        - osVersion
        - userAgent
      title: BrowserDetails
    Confidence:
      type: object
      additionalProperties: false
      properties:
        score:
          description: The confidence score is a floating-point number between 0 and 1 that represents the probability of accurate identification.
          type: number
          format: float
          minimum: 0
          maximum: 1
      required:
        - score
      title: Confidence
    SeenAt:
      type: object
      additionalProperties: false
      properties:
        global:
          type: string
          nullable: true
          format: date-time
          example: '2022-05-05T18:28:54.535Z'
        subscription:
          type: string
          nullable: true
          format: date-time
          example: '2022-06-09T22:58:05.576Z'
      required:
        - global
        - subscription
      title: SeenAt
      example:
        global: '2022-05-05T18:28:54.535Z'
        subscription: null
    IPLocation:
      type: object
      additionalProperties: false
      properties:
        accuracyRadius:
          type: integer
          minimum: 0
          example: 1000
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          example: 37.75
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          example: -97.82
        postalCode:
          type: string
          example: '130 00'
        timezone:
          type: string
          format: timezone
          example: 'America/Chicago'
        city:
          type: object
          additionalProperties: false
          title: IPLocationCity
          properties:
            name:
              type: string
              example: 'Prague'
        country:
          $ref: '#/components/schemas/Location'
        continent:
          $ref: '#/components/schemas/Location'
        subdivisions:
          type: array
          items:
            $ref: '#/components/schemas/Subdivision'
      required:
        - accuracyRadius
        - continent
        - country
        - latitude
        - longitude
        - timezone
      title: IPLocation
    Location:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          minLength: 2
          maxLength: 2
          example: 'US'
        name:
          type: string
          example: 'United States'
      required:
        - code
        - name
      title: Location
    Subdivision:
      type: object
      additionalProperties: false
      properties:
        isoCode:
          type: string
          example: '10'
        name:
          type: string
          example: 'Hlavni mesto Praha'
    ProductsResponse:
      type: object
      description: Contains all the information from each activated product - Fingerprint Pro or Bot Detection
      # The true default value for additionalProperties allows extending schema.
      # However, explicit additionalProperties: true breaks swagger-codegen, therefore commented out.
      # additionalProperties: true
      additionalProperties: false
      properties:
        identification:
          type: object
          additionalProperties: false
          title: ProductsResponseIdentification
          properties:
            data:
              title: ProductsResponseIdentificationData
              allOf:
                - $ref: '#/components/schemas/Visit'
                - type: object
                  properties:
                    visitorId:
                      type: string
                  required:
                    - visitorId
            error:
              $ref: '#/components/schemas/IdentificationError'
        botd:
          title: ProductsResponseBotd
          type: object
          additionalProperties: false
          properties:
            data:
              $ref: '#/components/schemas/BotdResult'
            error:
              $ref: '#/components/schemas/ProductError'
        ipInfo:
          title: SignalResponseIpInfo
          type: object
          properties:
            data:
              $ref: '#/components/schemas/IpInfoResult'
            error:
              $ref: '#/components/schemas/ProductError'
        incognito:
          title: SignalResponseIncognito
          type: object
          properties:
            data:
              type: object
              properties:
                result:
                  type: boolean
                  description: >
                    `true` if we detected incognito mode used in the browser, `false` otherwise.
                  example: false
            error:
              $ref: '#/components/schemas/ProductError'
        rootApps:
          title: SignalResponseRootApps
          type: object
          properties:
            data:
              type: object
              properties:
                result:
                  type: boolean
                  description: >
                    Android specific root management apps detection. There are 2 values:
                    • `true` - Root Management Apps detected (e.g. Magisk)
                    • `false` - No Root Management Apps detected

                    Available only for events from Android client. The field will not be present for a browser or iOS event.
                  example: false
            error:
              $ref: '#/components/schemas/ProductError'
        emulator:
          title: SignalResponseEmulator
          type: object
          properties:
            data:
              type: object
              properties:
                result:
                  type: boolean
                  description: >
                    Android specific emulator detection. There are 2 values:
                    • `true` - Emulated environment detected (e.g. launch inside of AVD)
                    • `false` - No signs of emulated environment detected

                    Available only for events from Android client. The field will not be present for a browser or iOS event.
                  example: false
            error:
              $ref: '#/components/schemas/ProductError'
        ipBlocklist:
          title: SignalResponseIpBlocklist
          type: object
          properties:
            data:
              $ref: '#/components/schemas/IpBlockListResult'
            error:
              $ref: '#/components/schemas/ProductError'
        tor:
          title: SignalResponseTor
          type: object
          properties:
            data:
              type: object
              properties:
                result:
                  type: boolean
                  description: >
                    `true` if the request IP address is a known tor exit node, `false` otherwise.
                  example: false
            error:
              $ref: '#/components/schemas/ProductError'
        vpn:
          title: SignalResponseVpn
          type: object
          properties:
            data:
              $ref: '#/components/schemas/VpnResult'
            error:
              $ref: '#/components/schemas/ProductError'
        proxy:
          title: SignalResponseProxy
          type: object
          properties:
            data:
              type: object
              properties:
                result:
                  type: boolean
                  description: >
                    `true` if the request IP address is used by a public proxy provider, `false` otherwise.
                  example: false
            error:
              $ref: '#/components/schemas/ProductError'
        tampering:
          title: SignalResponseTampering
          type: object
          properties:
            data:
              $ref: '#/components/schemas/TamperingResult'
            error:
              $ref: '#/components/schemas/ProductError'
    EventResponse:
      description: Contains event from activated products - Fingerprint Pro or Bot Detection
      type: object
      additionalProperties: false
      properties:
        products:
          $ref: '#/components/schemas/ProductsResponse'
    IdentificationError:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          description: >
            Error code:
             * `429 Too Many Requests` - the limit on secret API key requests per second has been exceeded
             * `Failed` - internal server error
          enum:
            - '429 Too Many Requests'
            - Failed
          example: '429 Too Many Requests'
        message:
          type: string
          example: 'too many requests'
      required:
        - code
        - message
    BotdResult:
      type: object
      # The true default value for additionalProperties allows extending schema.
      # However, explicit additionalProperties: true breaks swagger-codegen, therefore commented out.
      # additionalProperties: true
      description: Contains all the information from Bot Detection product
      properties:
        ip:
          type: string
          format: ipv4
          example: '8.8.8.8'
          description: IP address of the requesting browser or bot.
        time:
          title: Time
          description: Time in UTC when the request from the JS agent was made. We recommend to treat requests that are older than 2 minutes as malicious. Otherwise, request replay attacks are possible
          type: string
          format: date-time
          example: '2022-06-09T22:58:36Z'
        url:
          description: Page URL from which identification request was sent.
          type: string
          format: uri-reference
          example: 'https://example.com/login'
        userAgent:
          type: string
          example: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36'
        requestId:
          type: string
          example: '1681392853693.lRiBBD'
        bot:
          $ref: '#/components/schemas/BotdDetectionResult'
      required:
        - bot
        - url
        - ip
        - time
    BotdDetectionResult:
      type: object
      additionalProperties: false
      description: Stores bot detection result
      properties:
        result:
          type: string
          description: >
            Bot detection result:
             * `notDetected` - the visitor is not a bot
             * `good` - good bot detected, such as Google bot, Baidu Spider, AlexaBot and so on
             * `bad` - bad bot detected, such as Selenium, Puppeteer, Playwright, headless browsers, and so on
          enum:
            - notDetected
            - good
            - bad
          example: 'bad'
        type:
          type: string
          example: 'selenium'
      required:
        - result
    IpInfoResult:
      type: object
      description: Details about the request IP address. Has separate fields for v4 and v6 IP address versions.
      additionalProperties: false
      properties:
        v4:
          type: object
          additionalProperties: false
          properties:
            address:
              type: string
              format: ipv4
              example: '94.142.239.124'
            geolocation:
              $ref: '#/components/schemas/IPLocation'
        v6:
          type: object
          additionalProperties: false
          properties:
            address:
              type: string
              format: ipv6
              example: '2001:0db8:85a3:0000:0000:8a2e:0370:7334'
            geolocation:
              $ref: '#/components/schemas/IPLocation'
    IpBlockListResult:
      type: object
      properties:
        result:
          type: boolean
          description: >
            `true` if request IP address is part of any database that we use to search for known malicious actors, `false` otherwise.
          example: false
        details:
          type: object
          properties:
            emailSpam:
              type: boolean
              description: IP address was part of a known email spam attack (SMTP).
              example: false
            attackSource:
              type: boolean
              description: IP address was part of a known network attack (SSH/HTTPS).
              example: false
    VpnResult:
      type: object
      properties:
        result:
          type: boolean
          description: VPN or other anonymising service has been used when sending the request.
          example: false
        methods:
          type: object
          properties:
            timezoneMismatch:
              type: boolean
              description: User's browser timezone doesn't match the timezone from which the request was originally made.
              example: false
            publicVPN:
              type: boolean
              description: Request IP address is owned and used by a public VPN service provider.
              example: false
    TamperingResult:
      type: object
      properties:
        result:
          type: boolean
          description: Flag indicating whether browser tampering was detected according to our internal thresholds.
          example: false
        anomalyScore:
          type: number
          description: Confidence score (`0.0 - 1.0`) for the tampering detection. Values above `0.5` suggest that we're reasonably sure there was a tampering attempt. Values below `0.5` are genuine browsers.
          example: 0
          minimum: 0
          maximum: 1
    ProductError:
      type: object
      properties:
        code:
          type: string
          description: >
            Error code:
             * `TooManyRequests` - the limit on secret API key requests per second has been exceeded
             * `Failed` - internal server error
          enum:
            - TooManyRequests
            - Failed
          example: 'TooManyRequests'
        message:
          type: string
          example: 'too many requests'
      required:
        - code
        - message
